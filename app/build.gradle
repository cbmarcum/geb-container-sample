/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    // mavenLocal() // for local geb-container and geb 8
}

// begin section for geb-container
sourceSets {
    integrationTest {
        groovy {
            srcDirs = ['src/integration-test/groovy']
        }
        resources {
            srcDirs = ['src/integration-test/resources']
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}
// end section for geb-container



dependencies {
    // Use the latest Groovy version for building this library
    implementation libs.groovy

    // This dependency is used by the application.
    // implementation libs.guava

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation libs.spock.core
    testImplementation libs.junit
    testImplementation libs.geb.spock7


    integrationTestImplementation libs.geb.container

    // testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.13.4'
    // Need a driver implementation
    testRuntimeOnly libs.selenium.firefox.driver

    // TEST
    integrationTestImplementation 'org.testcontainers:spock:1.21.3'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'net.codebuilders.App'
}


tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test

    testLogging {
        events 'passed', 'skipped', 'failed'
    }

    // systemProperty('geb.cacheDriver', 'false')
    // systemProperty('geb.env', System.getProperty('geb.env'))
    systemProperty('grails.geb.recording.mode', 'RECORD_ALL') // also RECORD_FAILING
    systemProperty('grails.geb.browser.type', 'firefox') // also chrome and edge
}

check.dependsOn integrationTest

tasks.withType(Test).configureEach {
    outputs.upToDateWhen { false } // always run tests
    useJUnitPlatform()
}
